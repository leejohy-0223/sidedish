# This is a basic workflow to help you get started with Actions

name: test-deploy

on:
  push:
    branches: [test-deploy-lucid]

permissions:
  contents: read
  
env:
  S3_BUCKET_NAME: lucid-deploy-bucket
  PROJECT_NAME: test-deploy-lucid
  WORKING_DIRECTORY: ./backend

jobs:
  build:
    name: deploy to staging
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout
        uses: actions/checkout@v3
      
      - name: ‚öôÔ∏è Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          
      - name: üîê Grant execution permission for gradlew
        run: chmod +x gradlew
        shell: bash
        working-directory: $WORKING_DIRECTORY
        
      - name: üîß Build with Gradle
        run: ./gradlew bootjar
        shell: bash
        working-directory: $WORKING_DIRECTORY
        
      - name: üîß Make zip file  
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash
        working-directory: $WORKING_DIRECTORY
        
      - name: ‚öôÔ∏è Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}
          
      - name: ‚¨ÜÔ∏è Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
        working-directory: $WORKING_DIRECTORY
        
#       - name: ‚û°Ô∏è Code Deploy
#         run: aws deploy create-deployment --application-name sidedish-deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deploy-group-name sidedish-code-deploy --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
#         working-directory: $WORKING_DIRECTORY
        
